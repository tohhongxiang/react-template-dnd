{"version":3,"sources":["components/WidgetList.module.scss","components/Previewer.module.scss","components/Block.module.scss","components/Block.tsx","components/WidgetList.tsx","components/Previewer.tsx","components/Editor.tsx","components/functions/insertBlock.ts","components/functions/reorderBlocks.ts","index.tsx","App.tsx","components/Editor.module.scss"],"names":["module","exports","Block","type","text","id","index","updateBlock","deleteBlock","draggableId","provided","draggableProps","ref","innerRef","className","styles","block","dragHandleProps","dragHandle","value","onChange","e","target","input","placeholder","deleteButton","onClick","availableWidgets","WidgetList","widgetContainer","droppableId","isDropDisabled","widgetList","droppableProps","map","widget","key","snapshot","widgetButton","isDragging","Previewer","elements","content","React","createElement","data","Editor","useState","blocks","setBlocks","blockOrder","setBlockOrder","updatedText","prevBlocks","newBlocks","prevBlockOrder","filter","isPreviewing","setIsPreviewing","onDragEnd","result","source","destination","includes","blockTypeToCreate","replace","createdBlock","Date","now","toString","currentOrder","elementId","newOrder","Array","from","splice","insertBlocks","to","elementToMove","reorderBlocks","editLayout","editor","editorHeader","p","blockId","isDraggingOver","editorContent","length","blockInfo","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e74771c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgetContainer\":\"WidgetList_widgetContainer__2iq6q\",\"widgetList\":\"WidgetList_widgetList__1set7\",\"widgetButton\":\"WidgetList_widgetButton__32XBb\",\"isDragging\":\"WidgetList_isDragging__1uoJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Previewer_p__3JUVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Block_h1__2XMs3\",\"h2\":\"Block_h2__3Dlmv\",\"h3\":\"Block_h3__U-ACn\",\"h4\":\"Block_h4__14Rbj\",\"h5\":\"Block_h5__2FpTo\",\"h6\":\"Block_h6__2Eelj\",\"block\":\"Block_block__3rf1a\",\"input\":\"Block_input__geN8N\",\"dragHandle\":\"Block_dragHandle__1owpO\"};","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport styles from './Block.module.scss'\n\nexport interface BlockType {\n    id: string,\n    type: string,\n    text: string,\n    index: number\n}\n\ninterface BlockProps extends BlockType {\n    updateBlock: ( id: BlockType['id'], updatedContent: string) => void,\n    deleteBlock: (id: BlockType['id']) => void\n}\n\nexport default function Block({type, text, id, index, updateBlock, deleteBlock} : BlockProps) {\n    return (\n        <Draggable draggableId={id} index={index}>\n            {(provided) => <div {...provided.draggableProps}  ref={provided.innerRef}>\n                <div className={styles.block}>\n                    <div {...provided.dragHandleProps} className={styles.dragHandle}></div>\n                    <input value={text} onChange={e => updateBlock(id, e.target.value)} className={`${styles.input} ${styles[type]}`} placeholder={type} />\n                    <button className={styles.deleteButton} onClick={() => deleteBlock(id)}>x</button>\n                </div>\n            </div>}\n        </Draggable>\n    )\n}\n","import React from 'react'\nimport styles from './WidgetList.module.scss'\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\n\nconst availableWidgets = [\n    {\n        type: 'h1',\n        id: 'h1'\n    },\n    {\n        type: 'h2',\n        id: 'h2'\n    },\n    {\n        type: 'h3',\n        id: 'h3'\n    },\n    {\n        type: 'p',\n        id: 'p'\n    },\n]\n\nexport default function WidgetList() {\n    return (\n        <div className={styles.widgetContainer}>\n            <Droppable droppableId=\"widget-list\" isDropDisabled={true}>\n                {provided => <ul className={styles.widgetList} {...provided.droppableProps} ref={provided.innerRef}>\n                    {availableWidgets.map((widget: any, index) => (\n                        <li>\n                        <Draggable draggableId={`${widget.id}-widget`} index={index} key={widget.id} >\n                            {(provided, snapshot) =>  (\n                                <div ref={provided.innerRef} {...provided.dragHandleProps} {...provided.draggableProps}>\n                                    <div className={`${styles.widgetButton} ${snapshot.isDragging && styles.isDragging}`}>{widget.type}</div>\n                                </div>\n                            )}\n                        </Draggable>\n                        </li>\n                    ))}\n                    {provided.placeholder}\n                </ul>}\n            </Droppable>\n        </div>\n    )\n}\n","import React from 'react'\nimport { BlockType } from './Block'\nimport styles from './Previewer.module.scss'\n\ninterface PreviewerProps {\n    content: Omit<BlockType, 'index'>[]\n}\n\nexport default function Previewer({content} : PreviewerProps) {\n    const elements = content.map(block => React.createElement(block.type, {className: styles[block.type]}, block.text))\n    return (\n        <div>\n            {elements}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Block, { BlockType } from './Block'\nimport { DragDropContext, DropResult, Droppable } from 'react-beautiful-dnd'\nimport WidgetList from './WidgetList'\nimport styles from './Editor.module.scss'\nimport reorderBlocks from './functions/reorderBlocks'\nimport insertBlocks from './functions/insertBlock'\nimport Previewer from './Previewer'\n\ninterface IBlocks {\n    [key: string]: Omit<BlockType, 'index'>\n}\n\nconst data = {}\n\nexport default function Editor() {\n    const [blocks, setBlocks] = useState<IBlocks>(data)\n    const [blockOrder, setBlockOrder] = useState<string[]>([])\n\n    const onDragEnd = (result: DropResult) => {\n        const { source, destination, draggableId } = result\n\n        if (!destination) return // dropped outside\n        if (source.index === destination.index && source.droppableId === destination.droppableId) return // no change\n\n        if (draggableId.includes('widget')) { //drag widget into content\n            const blockTypeToCreate = draggableId.replace('-widget', '')\n            const createdBlock = createBlock(blockTypeToCreate)\n            setBlocks(prevBlocks => ({\n                ...prevBlocks,\n                [createdBlock.id]: createdBlock\n            }))\n\n            return setBlockOrder(prevBlockOrder => {\n                const newBlockOrder = insertBlocks(prevBlockOrder, destination.index, createdBlock.id)\n                return newBlockOrder\n            })\n        }\n\n        return setBlockOrder(prevBlockOrder => { // rearrange content\n            const newOrder = reorderBlocks(prevBlockOrder, source.index, destination.index)\n            return newOrder\n        })\n    }\n\n    const updateBlock = (id: BlockType['id'], updatedText: BlockType['text']) => {\n        setBlocks(prevBlocks => ({\n            ...prevBlocks,\n            [id]: {\n                ...prevBlocks[id],\n                text: updatedText\n            }\n        }))\n    }\n\n    const deleteBlock = (id: BlockType['id']) => {\n        setBlocks(prevBlocks => {\n            const newBlocks = {...prevBlocks}\n            delete newBlocks[id]\n            return newBlocks\n        })\n\n        setBlockOrder(prevBlockOrder => prevBlockOrder.filter(block => block !== id))\n    }\n\n    const [isPreviewing, setIsPreviewing] = useState(false)\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className={styles.editLayout}>\n                <div className={styles.editor}>\n                    <header className={styles.editorHeader}>\n                        <h1>{isPreviewing ? 'Preview' : 'Edit'}</h1>\n                        <button onClick={() => setIsPreviewing(p => !p)}>{isPreviewing ? 'Edit' : 'Preview'}</button>\n                    </header>\n                    {!isPreviewing ? <Droppable droppableId=\"editor\">\n                        {(provided, snapshot) => \n                            <div {...provided.droppableProps} ref={provided.innerRef}>\n                                <div className={`${snapshot.isDraggingOver && styles.isDraggingOver} ${styles.editorContent}`}>\n                                    {blockOrder.length > 0 ? blockOrder.map((block : keyof IBlocks, index) => {\n                                        const blockInfo = blocks[block]\n                                        return <Block key={blockInfo.id} {...blockInfo} index={index} updateBlock={updateBlock} deleteBlock={deleteBlock}/>\n                                    }) : <p><i>Drag a widget in from the right</i></p>}\n                                    {provided.placeholder}\n                                </div>\n                            </div>\n                        }\n                    </Droppable> : <Previewer content={blockOrder.map(blockId => blocks[blockId])} />}\n                </div>\n                {isPreviewing || <WidgetList />}\n            </div>\n        </DragDropContext>\n    )\n}\n\nfunction createBlock(type: string) : Omit<BlockType, 'index'> {\n    return {\n        id: Date.now().toString(),\n        type,\n        text: ''\n    }\n}\n","export default function insertBlock(currentOrder: string[], index: number, elementId: string) {\n    const newOrder = Array.from(currentOrder)\n    newOrder.splice(index, 0, elementId)\n    return newOrder\n}","export default function reorderBlocks(currentOrder: string[], from: number, to: number) {\n    const newOrder = Array.from(currentOrder)\n    const elementToMove = newOrder.splice(from, 1)\n    newOrder.splice(to, 0, ...elementToMove)\n\n    return newOrder\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))","import React, {useState} from 'react'\nimport './App.scss'\nimport Editor from './components/Editor'\n\nexport default function App() {\n    return (\n        <Editor />\n    )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editLayout\":\"Editor_editLayout__33J5S\",\"editorHeader\":\"Editor_editorHeader__2f5sk\",\"editor\":\"Editor_editor__3kRvc\",\"editorContent\":\"Editor_editorContent__2x-xc\",\"isDraggingOver\":\"Editor_isDraggingOver__2LdwS\"};"],"sourceRoot":""}